<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx
    		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    		"
	default-lazy-init="false">
	
    <!-- dataSource by druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="url" value="jdbc:mysql://127.0.0.1:3306/ZERONOTE?useUnicode=true&amp;characterEncoding=UTF-8" />
	    <property name="username" value="root" />
	    <property name="password" value="something" />
	     
	    <property name="filters" value="stat" />
	 
	    <property name="maxActive" value="20" />
	    <property name="initialSize" value="1" />
	    <property name="maxWait" value="60000" />
	    <property name="minIdle" value="1" />
	 
	    <property name="timeBetweenEvictionRunsMillis" value="3000" />
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	 
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	     
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	</bean>
    
	<!-- redis cache pool -->
	<bean id="jedisCachePoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="20" />
		<property name="maxWait" value="1000" />
		<property name="testOnBorrow" value="true" />
	</bean>
	<bean id="jedisCachePool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<constructor-arg name="poolConfig" ref="jedisCachePoolConfig" />
		<constructor-arg name="host" value="127.0.0.1" />
		<constructor-arg name="port" value="6380" />
	</bean>
	
	<!-- DAO config -->
	<bean id="dbDao" class="cn.org.zeronote.orm.dao.DefaultCommonDao">
		<property name="dataSource" ref="dataSource" />
		<property name="dbType" value="MYSQL" />
	</bean>
	
	<bean id="cacheDao" class="cn.org.zeronote.orm.nosql.RedisWeakCachedCommonDao">
		<property name="dataSource" ref="dataSource" />
		<property name="jedisPool" ref="jedisCachePool" />
		<property name="cacheSeconds" value="60" />
	</bean>
	
	<bean class="cn.org.zeronote.orm.dao.HashTableInitialization"> <!--  init-method="init" -->
		<property name="dao" ref="dbDao" />
		<property name="clzss">
			<list>
				<value>cn.org.zeronote.orm.testpo.UserNotifyPO</value>
			</list>
		</property>
	</bean>
	
	<!-- Generation Code -->
	<bean class="cn.org.zeronote.orm.generation.GenerationCodeJDBC">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<context:component-scan base-package="cn.org.zeronote.orm.dao" />
</beans>  
